{"version":3,"sources":["components/navbar/NavBar.js","components/header/Header.js","components/inventory/InventoryItem.js","components/inventory/Inventory.js","components/footer/Footer.js","components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","id","href","Header","InventoryItem","props","onClick","onChecked","text","InventoryList","useState","inputText","setInputText","items","setItems","deleteItem","prevItems","filter","item","index","onChange","event","newValue","target","value","type","placeholder","map","inventoryItem","Footer","Date","getFullYear","App","Inventory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"ySAYeA,MATf,WACI,OACI,sBAAKC,UAAU,SAASC,GAAG,WAA3B,UACI,mBAAGC,KAAK,QAAQF,UAAU,SAA1B,kBACA,mBAAGE,KAAK,SAAR,uBCIGC,G,MARA,WACX,OACI,qBAAKH,UAAU,SAAf,SACI,mD,cCOGI,MAXf,SAAuBC,GACnB,OACI,qBAAKC,QAAS,WACVD,EAAME,UAAUF,EAAMJ,KAD1B,SAII,6BAAKI,EAAMG,U,MCkDRC,MAtDf,WAA0B,IAAD,EAEaC,mBAAS,IAFtB,mBAEdC,EAFc,KAEHC,EAFG,OAGKF,mBAAS,IAHd,mBAGdG,EAHc,KAGPC,EAHO,KAerB,SAASC,EAAWd,GAChBa,GAAS,SAAAE,GACL,OAAOA,EAAUC,QAAO,SAACC,EAAMC,GAC3B,OAAOA,IAAUlB,QAM7B,OACI,sBAAKD,UAAU,iBAAf,UACI,gCACI,uBACIoB,SAvBhB,SAAsBC,GAClB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BZ,EAAaU,IAsBDG,KAAK,OACLC,YAAY,WACZF,MAAOb,IAEX,wBAAQL,QAxBpB,WACIQ,GAAS,SAAAE,GACL,MAAM,GAAN,mBAAWA,GAAX,CAAsBL,OAE1BC,EAAa,KAoBL,SACI,iDAGR,8BACI,6BACKC,EAAMc,KAAI,SAACC,EAAeT,GAAhB,OACP,cAAC,EAAD,CAEIlB,GAAIkB,EACJX,KAAMoB,EACNrB,UAAWQ,GAHNI,cC9BlBU,G,MATA,WACX,OACI,sBAAK7B,UAAU,SAAf,UACI,sDANE,QAMF,YALE,cAMF,4CAAe,IAAI8B,MAAOC,sBCMvBC,MAXf,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAACC,EAAD,IACA,cAAC,EAAD,QCCSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5b86352f.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../../styles/navbar.css'\r\n\r\nfunction NavBar() {\r\n    return(\r\n        <div className=\"navbar\" id=\"myNavBar\">\r\n            <a href=\"#home\" className=\"active\">Home</a>\r\n            <a href=\"#about\">About</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavBar","import React from 'react'\r\nimport '../../styles/header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Inventory App</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nfunction InventoryItem(props) {\r\n    return(\r\n        <div onClick={() => {\r\n            props.onChecked(props.id)\r\n            }}\r\n        >\r\n            <li>{props.text}</li>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default InventoryItem","import React, { useState } from 'react'\r\nimport InventoryItem from './InventoryItem'\r\nimport '../../styles/inventory.css'\r\n\r\nfunction InventoryList() {\r\n\r\n    const [inputText, setInputText] = useState(\"\")\r\n    const [items, setItems] = useState([])\r\n\r\n    function handleChange(event) {\r\n        const newValue = event.target.value\r\n        setInputText(newValue)\r\n    }\r\n    function addItem() {\r\n        setItems(prevItems => {\r\n            return [...prevItems, inputText]\r\n        })\r\n        setInputText(\"\")\r\n    }\r\n    function deleteItem(id) {\r\n        setItems(prevItems => {\r\n            return prevItems.filter((item, index) => {\r\n                return index !== id\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"grid-container\">\r\n            <div>\r\n                <input \r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    placeholder=\"Add Item\"\r\n                    value={inputText}\r\n                />\r\n                <button onClick={addItem}>\r\n                    <span>Add Item</span>\r\n                </button>\r\n            </div>\r\n            <div>\r\n                <ul>\r\n                    {items.map((inventoryItem, index) => (\r\n                        <InventoryItem\r\n                            key={index}\r\n                            id={index}\r\n                            text={inventoryItem}\r\n                            onChecked={deleteItem}\r\n                        />\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default InventoryList","import React from 'react'\r\nimport '../../styles/footer.css'\r\n\r\nconst fname = \"Tessa\"\r\nconst lname = \"Seiders\"\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Created by {`${fname} ${lname}`}</p>\r\n            <p>Copyright {(new Date().getFullYear())}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import NavBar from './navbar/NavBar'\nimport Header from './header/Header'\nimport Inventory from './inventory/Inventory'\nimport Footer from './footer/Footer'\n\nfunction App() {\n  return (\n    <div>\n      <NavBar />\n      <Header />\n      <Inventory />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}