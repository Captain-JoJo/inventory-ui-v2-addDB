{"version":3,"sources":["components/common/navbar/Navbar.js","components/common/header/Header.js","components/InventoryManager/input-form/index.js","components/InventoryManager/edit-form/index.js","components/InventoryManager/inventory-list/index.js","api/inventoryItem/index.js","api/inventoryItem/api.js","components/InventoryManager/InventoryDetails.js","components/common/footer/Footer.js","components/common/NotFoundPage.js","components/App.js","reportWebVitals.js","index.js"],"names":["NavBar","className","to","Header","InputForm","addNewItem","useInputState","itemName","handleNameChange","resetNameField","itemQty","handleChangeQty","resetQtyField","initialValue","useState","newValue","setValue","console","log","event","target","value","onSubmit","e","preventDefault","name","type","placeholder","onChange","label","required","EditItemForm","inventoryItem","update","toggle","initialVal","qty","_id","fav","valueQty","resetQty","valueName","handleChangeName","resetName","autoFocus","ListItem","handleRemoveOne","state","setState","useToggle","isEditing","checked","onClick","BASE_URL","axios","create","baseURL","insertItem","a","payload","post","results","data","getAllItems","get","then","res","deleteOneItem","id","delete","updateOneItem","itemFav","put","InventoryDetails","items","setItems","updatedItems","deleteOne","filter","item","updatedRow","map","row","useEffect","displayItems","Footer","Date","getFullYear","NotFoundPage","AppRouter","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"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","file":"static/js/main.065b6733.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Navbar.css'\r\nimport { NavLink, Link } from 'react-router-dom'\r\n\r\nfunction NavBar() {\r\n    return(\r\n        <div className=\"navbar\">\r\n            <NavLink to=\"/home\" className=\"active\">Home</NavLink>\r\n            <NavLink to=\"/about\">About</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar\r\n\r\n{/* \r\n\r\n<a href=\"#home\" className=\"active\">Home</a>\r\n<a href=\"#about\">About</a> \r\n\r\n*/}","import React from 'react'\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Inventory App</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState } from \"react\";\r\n\r\nfunction InputForm({ addNewItem }) {\r\n  const [itemName, handleNameChange, resetNameField] = useInputState(\"\");\r\n  const [itemQty, handleChangeQty, resetQtyField] = useInputState(\"\");\r\n\r\n  function useInputState(initialValue) {\r\n    const [newValue, setValue] = useState(initialValue);\r\n    const handleChange = (event) => setValue(event.target.value);\r\n    const reset = () => setValue(\"\");\r\n    console.log(newValue);\r\n    return [newValue, handleChange, reset];\r\n  }\r\n\r\n  return (\r\n    <form\r\n      className=\"InputForm\"\r\n      onSubmit={(e) => {\r\n        e.preventDefault();\r\n        addNewItem(itemName, itemQty);\r\n        console.log(\"name value\", itemName);\r\n        resetNameField();\r\n        resetQtyField();\r\n      }}\r\n    >\r\n      <input\r\n        className=\"tdInputFormName\"\r\n        name=\"nameInputForm\"\r\n        type=\"text\"\r\n        value={itemName}\r\n        placeholder=\"Add New Item\"\r\n        onChange={handleNameChange}\r\n        label=\"Add New Item\"\r\n        required\r\n      />\r\n      <input\r\n        className=\"tdInputFormQty\"\r\n        name=\"qtyInputForm\"\r\n        type=\"number\"\r\n        value={itemQty}\r\n        placeholder=\"Qty\"\r\n        onChange={handleChangeQty}\r\n        label=\"Qty\"\r\n        required\r\n      />\r\n      <button type=\"submit\">Add Item</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default InputForm;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction EditItemForm({ inventoryItem, update, toggle }) {\r\n  function useInputState(initialVal) {\r\n    const [value, setValue] = useState(initialVal);\r\n    const handleChange = (e) => setValue(e.target.value);\r\n    const reset = () => setValue(\"\");\r\n    console.log(\"value\", value);\r\n    return [value, handleChange, reset];\r\n  }\r\n  const { name: itemName, qty, _id, fav } = inventoryItem;\r\n  const [valueQty, handleChangeQty, resetQty] = useInputState(qty);\r\n  const [valueName, handleChangeName, resetName] = useInputState(itemName);\r\n\r\n  return (\r\n    <tr>\r\n      <td></td>\r\n      <td>\r\n        <form\r\n          className=\"InputForm\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            update(_id, valueName, valueQty, fav);\r\n            resetQty();\r\n            toggle();\r\n          }}\r\n        >\r\n          <input\r\n            className=\"tdEditFormQty\"\r\n            name=\"qtyEditForm\"\r\n            type=\"number\"\r\n            value={valueQty}\r\n            onChange={handleChangeQty}\r\n            label=\"Update quantity\"\r\n            \r\n          />\r\n        </form>\r\n      </td>\r\n\r\n      <td>\r\n        <form\r\n          className=\"InputForm\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault();\r\n            update(_id, valueName, valueQty, fav);\r\n            resetName();\r\n            toggle();\r\n          }}\r\n        >\r\n          <input\r\n            className=\"tdEditFormName\"\r\n            name=\"nameEditForm\"\r\n            type=\"text\"\r\n            value={valueName}\r\n            onChange={handleChangeName}\r\n            label=\"Update name\"\r\n            autoFocus={true}\r\n          />\r\n        </form>\r\n      </td>\r\n      <td>Press Enter</td>\r\n    </tr>\r\n  );\r\n}\r\n\r\nexport default EditItemForm;\r\n","import React, {Fragment, useState} from \"react\";\r\nimport EditItemForm from \"../edit-form\";\r\n\r\nexport default function ListItem({inventoryItem, handleRemoveOne, update}) {\r\n  const {name, qty, _id, fav} = inventoryItem;\r\n  const [isEditing, toggle] = useToggle(false);\r\n\r\n  function useToggle(initialValue = false) {\r\n    const [state, setState] = useState(initialValue);\r\n    const toggle = () => setState(!state);\r\n    return [state, toggle];\r\n  }\r\n  function handleFavChange() {\r\n    update(_id, name, qty, !fav);\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      {isEditing ? (\r\n        <EditItemForm inventoryItem={inventoryItem} update={update} toggle={toggle} />\r\n      ) : (\r\n        <Fragment>\r\n          <tr>\r\n            <td>\r\n              <input\r\n                className=\"favBox\"\r\n                type=\"checkbox\"\r\n                name=\"isFav\"\r\n                checked={fav}\r\n                onChange={handleFavChange}\r\n              />\r\n            </td>\r\n            <td className=\"tdQty\">{qty}</td>\r\n            <td className=\"tdName\">{name}</td>\r\n            <td>\r\n              <span className=\"button-group\">\r\n                <button className=\"button\" onClick={toggle}>Edit</button>\r\n                <button className=\"button\" onClick={() => handleRemoveOne(_id)}>\r\n                  Remove\r\n                </button>\r\n              </span>\r\n            </td>\r\n          </tr>\r\n        </Fragment>\r\n      )}\r\n    </Fragment>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport api from \"./api\";\r\n\r\nconst BASE_URL = \"http://localhost:5000\";\r\nconst HEROKU_URL = \"https://inventoryv2api.herokuapp.com\";\r\n\r\nexport async function insertItem(itemName, itemQty) {\r\n  const payload = {\r\n    name: itemName,\r\n    qty: itemQty,\r\n  };\r\n  // try/catch here for an error on ID\r\n  // - if replacing axios with and \"api\" wrapper \r\n  //   it allows for a SOFT error instead of a HARD error to the user\r\n  try {\r\n    let results = await axios.post(`${BASE_URL}/insertData`, payload);\r\n    return results.data._id;\r\n  } catch (error) {\r\n    console.log('Need to catch error here', error);\r\n  }\r\n}\r\n\r\nexport async function getAllItems() {\r\n  return await axios.get(`${BASE_URL}/getData`).then((res) => {\r\n    return res.data;\r\n  });\r\n}\r\n\r\nexport async function deleteAllItems() {\r\n  axios.delete(`${BASE_URL}/deleteAll`).then((res) => {\r\n    console.log(res.data);\r\n  });\r\n}\r\n\r\nexport async function deleteOneItem(id) {\r\n  return axios.delete(`${BASE_URL}/deleteOne/${id}`).then((res) => {\r\n\r\n    console.log(\"I am trying to remove this one\", id);\r\n    console.log(\"This is the res.data in deleteOneItem function\", res.data);\r\n    return res.data;\r\n  });\r\n}\r\nexport async function updateOneItem(id, itemName, itemQty, itemFav) {\r\n  const payload = { name: itemName, qty: itemQty, fav: itemFav };\r\n  return axios.put(`${BASE_URL}/updateOne/${id}`, payload).then((res) => {\r\n    console.log(\"I am trying to update this one\", id);\r\n    console.log(\"This is the res.data in updateOneItem function\", res.data);\r\n    return res.data;\r\n  });\r\n}\r\n\r\n// NOT used yet\r\n// export async function updateAllItems() {\r\n//   axios.put(`${BASE_URL}/updateAll`).then((res) => {\r\n//     console.log(res.data);\r\n//   });\r\n// }\r\n\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"/api\",\r\n});\r\n\r\nexport default api;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./InventoryDetails.css\";\r\nimport InputForm from \"./input-form\";\r\nimport ListItem from \"./inventory-list\";\r\nimport {\r\n  insertItem,\r\n  getAllItems,\r\n  deleteAllItems,\r\n  deleteOneItem,\r\n  updateOneItem,\r\n} from \"../../api/inventoryItem\";\r\n\r\nexport default function InventoryDetails() {\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"run one time to get the starting data\");\r\n    displayItems(setItems);\r\n  }, []); \r\n\r\n  // suggestion: use hook to load the inventory manager\r\n  //             put into a reusable hook or another module\r\n  //            - hooks are great for when using state and in future using \"spinner\"\r\n  async function addNewItem(itemName, itemQty) {\r\n    const itemFav = false;\r\n    try {\r\n      // take try/catch out here and put it inot the insertItem function\r\n      // if using something like thunk later on it is helpful to seperate out operations.\r\n      const _id = await insertItem(itemName, itemQty, itemFav);\r\n      const updatedItems = [\r\n        ...items,\r\n        { _id: _id, name: itemName, qty: itemQty, fav: itemFav },\r\n      ];\r\n      console.log(\"This is the updatedItems\", updatedItems);\r\n      setItems(updatedItems);\r\n    } catch (error) {\r\n      console.log(\"insertItem sql error\", error);\r\n    }\r\n  }\r\n\r\n  async function displayItems() {\r\n    try {\r\n      const results = await getAllItems();\r\n      setItems(results);\r\n    } catch (error) {\r\n      console.log(\"getAllItems sql error\", error);\r\n    }\r\n  }\r\n\r\n  // async function deleteAll() {\r\n  //   try {\r\n  //     await deleteAllItems();\r\n  //     setItems([]);\r\n  //   } catch (error) {\r\n  //     console.log(\"deleteAllItems sql error\", error);\r\n  //   }\r\n  // }\r\n\r\n  async function deleteOne(id) {\r\n    console.log(\"initial id\", id);\r\n    try {\r\n      const results = await deleteOneItem(id);\r\n      setItems(items.filter((item) => item._id !== id));\r\n      console.log(\"const results from the await deleteOneItem\", results);\r\n    } catch (error) {\r\n      console.log(\"deleteOneItem sql error\", error);\r\n    }\r\n  }\r\n  async function update(id, itemName, itemQty, itemFav) {\r\n    try {\r\n      const updatedRow = {\r\n        _id: id,\r\n        name: itemName,\r\n        qty: itemQty,\r\n        fav: itemFav,\r\n      };\r\n      const updatedItems = items.map((row) => {\r\n        if (row._id === id) {\r\n          return updatedRow;\r\n        }\r\n        return row;\r\n      });\r\n      setItems(updatedItems);\r\n      await updateOneItem(id, itemName, itemQty, itemFav);\r\n    } catch (error) {\r\n      console.log(\"updateOneItem sql error\", error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <div>\r\n        <InputForm addNewItem={addNewItem} className=\"InputForm\" />\r\n\r\n        {/* <button className=\"button\" onClick={deleteAll}>\r\n          Delete All\r\n        </button> */}\r\n      </div>\r\n{/* ternary if true the toggle is turned on display spinner \r\nif false then diplay table*/}\r\n      <table className=\"TableContainer\">\r\n        <thead>\r\n          <tr className=\"trHead\">\r\n            <th className=\"tdFav\">Fav</th>\r\n            <th>Qty</th>\r\n            <th>Name</th>\r\n            <th></th>\r\n          </tr>\r\n        </thead>\r\n        {items.map((inventoryItem) => (\r\n          <tbody key={inventoryItem._id}>\r\n            <ListItem\r\n              inventoryItem={inventoryItem}\r\n              handleRemoveOne={deleteOne}\r\n              update={update}\r\n            />\r\n          </tbody>\r\n        ))}\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className=\"footer\">\r\n            <p>Created by Tessa Seiders</p>\r\n            <p>Copyright {(new Date().getFullYear())}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst NotFoundPage = () => {\r\n    <div>404! -\r\n        <Link to=\"/\">Go to Home</Link>\r\n    </div>\r\n}\r\n\r\nexport default NotFoundPage","import Navbar from \"./common/navbar/Navbar\";\r\nimport Header from \"./common/header/Header\";\r\nimport InventoryDetails from \"./InventoryManager/InventoryDetails\";\r\nimport Footer from \"./common/footer/Footer\";\r\nimport NotFoundPage from \"./common/NotFoundPage\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nconst AppRouter = () => (\r\n  <BrowserRouter>\r\n      <Navbar />\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" component={InventoryDetails} />\r\n        <Route component={NotFoundPage} />\r\n      </Switch>\r\n      <Footer />\r\n  </BrowserRouter>\r\n)\r\n\r\nexport default AppRouter\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport AppRouter from './components/App'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <AppRouter />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}